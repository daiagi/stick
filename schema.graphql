type CollectionEntity @entity {
  attributes: [Attribute!]
  blockNumber: BigInt
  burned: Boolean!
  createdAt: DateTime!
  currentOwner: String!
  distribution: Int!
  events: [CollectionEvent!] @derivedFrom(field: "collection")
  floor: BigInt!
  hash: String! @unique
  highestSale: BigInt!
  id: ID!
  image: String
  issuer: String!
  max: Int
  media: String
  meta: MetadataEntity
  metadata: String
  name: String @index
  nftCount: Int!
  nfts: [NFTEntity!] @derivedFrom(field: "collection")
  ownerCount: Int!
  supply: Int!
  updatedAt: DateTime!
  version: Int!
  volume: BigInt!
}

type TokenEntity @entity {
  id: ID!
  blockNumber: BigInt
  collection: CollectionEntity
  nfts: [NFTEntity!] @derivedFrom(field: "token")
  hash: String! @index
  image: String
  media: String
  name: String @index
  updatedAt: DateTime!
  createdAt: DateTime!
  count: Int!
}

type NFTEntity @entity {
  attributes: [Attribute!]
  blockNumber: BigInt
  burned: Boolean!
  collection: CollectionEntity!
  createdAt: DateTime!
  currentOwner: String! @index
  events: [Event!] @derivedFrom(field: "nft")
  hash: String! @index
  id: ID!
  image: String
  issuer: String!
  lewd: Boolean!
  media: String
  meta: MetadataEntity
  metadata: String
  name: String @index
  price: BigInt
  recipient: String
  royalty: Float
  sn: String!
  updatedAt: DateTime!
  version: Int!
  token: TokenEntity!
}

type MetadataEntity @entity {
  id: ID!
  name: String
  description: String
  image: String
  attributes: [Attribute!]
  animationUrl: String
  type: String
}

type Attribute @jsonField {
  display: String
  trait: String
  value: String!
}

interface EventType {
  id: ID!
  blockNumber: BigInt
  timestamp: DateTime!
  caller: String!
  currentOwner: String
  interaction: Interaction!
  # version: Int!
  meta: String!
}

type Event implements EventType @entity {
  id: ID!
  blockNumber: BigInt
  timestamp: DateTime!
  caller: String!
  currentOwner: String! # currentOwner
  interaction: Interaction!
  meta: String!
  nft: NFTEntity!
  # version: Int!
}

type CollectionEvent implements EventType @entity {
  id: ID!
  blockNumber: BigInt
  timestamp: DateTime!
  caller: String!
  currentOwner: String # currentOwner
  interaction: Interaction!
  meta: String!
  collection: CollectionEntity!
  # version: Int!
}

enum Interaction {
  BURN
  BUY
  CREATE
  DESTROY
  LIST
  MINT
  SEND
  UNLIST
  LOCK
  CHANGEISSUER
}

type AssetEntity @entity {
  id: ID!
  name: String
  symbol: String
  decimals: Int
}
